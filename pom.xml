<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.nlx.mall</groupId>
  <artifactId>nlmmall</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>mall-api-commons</module>
      <module>mall-service-order8002</module>
      <module>mall-service-order8001</module>
      <module>mall-service-storage8101</module>
    <module>mall-service-account8201</module>
      <module>mall-client-order80</module>
  </modules>

  <!-- 统一管理jar包版本 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <lombok.version>1.16.18</lombok.version>
    <mysql.version>8.0.21</mysql.version>
    <druid.version>1.1.16</druid.version>
    <com.baomidou.version>3.3.2</com.baomidou.version>
  </properties>

  <!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version -->
  <dependencyManagement>
    <dependencies>
      <!--spring boot 2.2.2-->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.2.2.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--spring cloud Hoxton.SR1-->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Hoxton.SR1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!--spring cloud alibaba 2.1.0.RELEASE-->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>2.1.0.RELEASE</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- mysql -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <!-- druid -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <!-- junit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <!-- log4j -->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <!-- lombok -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <optional>true</optional>
      </dependency>
      <!-- mybatisplus -->
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>${com.baomidou.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>nlmmall</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>

<!--
    1 压测用 Jmeter

    2 接口用 PostMan

    3 cmd 用 curl
        不带任何属性:    curl http://localhost:9527/payment/lb
        带cookie:  curl http://localhost:9527/payment/lb  - -cookie "username=zzyy"   // cmd输入命令时，cookie前的两个 - 符号，中间不要空格
        带Request: curl http://localhost:9527/payment/lb  -H "X-Request-Id:123"

    4 公共的配置文件更新，服务端可以更新，但是客户端不能更新，需要运维人员手动调用post请求，刷新
        curl -X POST "http://localhost:3355/actuator/refresh"
        curl -X POST "http://localhost:3366/actuator/refresh"
        4.1 如果配置了总线 bus + rabbitMQ ，只要刷新服务端一次性就可以
        curl -X POST "http://localhost:3344/actuator/bus-refresh"
        4.2 如果只想通知其中的一个或者多个
        curl -X POST "http://localhost:3344/actuator/bus-refresh/config-client:3355"

    5 RabbitMQ安装好以后要到 F:\Program Files\RabbitMQ Server\rabbitmq_server-3.7.14\sbin 文件夹下，然后执行cmd，输入下面一行命令
      rabbitmq-plugins enable rabbitmq_management
      查看是否启动成功，地址：http://localhost:15672/
      账号/密码 guest/guest
      win开始菜单里有 start / end 功能

    6 zipkin 启动
        java -jar zipkin-server-2.14.1-exec.jar
        控制台 : http://localhost:9411

    7 Nacos 切换 AP 和 CP 的curl命令
        curl -X PUT '$NACOS_SERVER:8848/nacos/v1/ns/operator/switches?entry=serverMode&value=CP'


    8 sentinel 启动 ：java -jar sentinel-dashboard-**.jar
        账号/密码 sentinel / sentinel
-->



